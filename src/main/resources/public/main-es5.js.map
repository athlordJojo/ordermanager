{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/model/order-dto.ts","webpack:///src/app/order-form/order-form/order-form.component.ts","webpack:///src/app/order-form/order-form/order-form.component.html","webpack:///src/app/order-list/order-list/order-list.component.ts","webpack:///src/app/order-list/order-list/order-list.component.html","webpack:///src/app/service/order.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","OrderDto","OrderFormComponent","route","router","orderService","newOrder","state","loadData","save","subscribe","result","gotoUserList","scoreBoardNumber","findAll","data","orders","sort","o1","o2","localeCompare","toString","selectedOrder","console","log","update","onSubmit","changeStateOfSelectedOrder","OrderListComponent","t","subscription","v","unsubscribe","sortOrderByModifiedDate","order1","order2","lastModifiedDate","inProgressOrders","filter","order","readyOrders","scoreBoardNumberOflastReadyOrder","length","OrderService","http","url","get","post","put","uuid","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {OrderListComponent} from \"./order-list/order-list/order-list.component\";\nimport {OrderFormComponent} from \"./order-form/order-form/order-form.component\";\n\nconst routes: Routes = [\n  { path: 'orders', component: OrderListComponent },\n  { path: 'manage', component: OrderFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title: string;\n\n  constructor() {\n    this.title = 'Ordermanager';\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card bg-dark my-5\">\n        <div class=\"card-body\">\n          <h2 class=\"card-title text-center text-white py-3\">{{ title }}</h2>\n          <ul class=\"text-center list-inline py-3\">\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/orders\" class=\"btn btn-info\">List Orders</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/manage\" class=\"btn btn-info\">Manage Orders</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {OrderListComponent} from './order-list/order-list/order-list.component';\nimport {OrderFormComponent} from './order-form/order-form/order-form.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {OrderService} from \"./service/order.service\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AppRoutingModule} from \"./app-routing.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrderListComponent,\n    OrderFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [OrderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export class OrderDto {\n  uuid: string;\n  title: string;\n  scoreBoardNumber: number;\n  state: String;\n  createdDate: Date;\n  lastModifiedDate: Date;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {OrderService} from '../../service/order.service';\nimport {OrderDto} from \"../../model/order-dto\";\n\n@Component({\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css']\n})\nexport class OrderFormComponent implements OnInit {\n\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  newOrder: OrderDto;\n  selectedOrder: OrderDto;\n  orders: OrderDto[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private orderService: OrderService) {\n    this.newOrder = new OrderDto();\n    this.newOrder.state = 'IN_PROGRESS';\n  }\n\n  onSubmit() {\n    this.orderService.save(this.newOrder).subscribe(result => this.gotoUserList());\n    this.newOrder.scoreBoardNumber = null;\n    this.loadData();\n  }\n\n  gotoUserList() {\n    // this.router.navigate(['/orders']);\n  }\n\n  loadData() {\n    this.orderService.findAll().subscribe(data => {\n      this.orders = data\n      this.orders.sort((o1, o2) => {\n        return o1.state.localeCompare(o2.state.toString())\n      });\n    })\n  }\n\n  selectOrder(selectedOrder: OrderDto) {\n    this.selectedOrder = selectedOrder;\n    console.log(\"Clicked:\", selectedOrder);\n  }\n\n  changeStateOfSelectedOrder(state: string) {\n    this.selectedOrder.state = state;\n    this.orderService.update(this.selectedOrder).subscribe(data => this.loadData());\n  }\n\n}\n","<div class=\"container bg-dark\">\n\n  <div class=\"row bg-dark\">\n    <div class=\"col-lg\">\n      <p class=\"display-4 text-white text-center\">\n        Neue Bestellung aufgeben\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #orderForm=\"ngForm\">\n        <div class=\"form-group\">\n          <input type=\"number\" [(ngModel)]=\"newOrder.scoreBoardNumber\"\n                 class=\"form-control\"\n                 id=\"scoreBoardNumber\"\n                 name=\"scoreBoardNumber\"\n                 placeholder=\"Bestellnummer eingeben\"\n                 required #scoreBoardNumber=\"ngModel\">\n        </div>\n        <div [hidden]=\"!scoreBoardNumber.pristine\" class=\"alert alert-danger\">Bestellnummer wird benötigt</div>\n        <button type=\"submit\" [disabled]=\"!orderForm.form.valid\"\n                class=\"btn btn-info\">Erstellen\n        </button>\n      </form>\n    </div>\n  </div>\n  <!--  <div class=\"row bg-dark\">-->\n\n  <!--  </div>-->\n  <div class=\"row bg-dark\">\n    <div class=\"col-lg\">\n      <p class=\"display-4 text-white text-center\">\n        Bestellungen verwalten\n      </p>\n      <div class=\"text-center\">\n        <div class=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Basic example\">\n          <button [disabled]=\"!selectedOrder\" type=\"button\" class=\"btn btn-secondary\"\n                  (click)=\"changeStateOfSelectedOrder('IN_PROGRESS')\">In Bearbeitung\n          </button>\n          <button [disabled]=\"!selectedOrder\" type=\"button\" class=\"btn btn-secondary\"\n                  (click)=\"changeStateOfSelectedOrder('READY')\">Bereit\n          </button>\n          <button [disabled]=\"!selectedOrder\" type=\"button\" class=\"btn btn-secondary\"\n                  (click)=\"changeStateOfSelectedOrder('DONE')\">Fertig\n          </button>\n        </div>\n      </div>\n\n      <table class=\"table table-bordered table-striped text-center\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Bestellnummer</th>\n          <th scope=\"col\">Zustand</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr (click)=\"selectOrder(order)\"\n            [ngClass]=\"{'table-success': order.state === 'READY', 'table-warning':order.state === 'IN_PROGRESS', 'table-dark':order.state === 'DONE' }\"\n            class=\"table-success\" *ngFor=\"let order of orders\">\n          <td>{{ order.scoreBoardNumber }}</td>\n          <td>{{ order.state }}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {OrderService} from \"../../service/order.service\";\nimport {OrderDto} from \"../../model/order-dto\";\nimport {timer} from 'rxjs';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit, OnDestroy {\n  subscription;\n\n  ngOnDestroy(): void {\n    console.log(\"Cancel timer.\")\n    this.subscription.unsubscribe();\n  }\n\n  constructor(private orderService: OrderService) {\n    const t = timer(2000, 4000);\n    this.subscription = t.subscribe(v => {\n      this.loadData();\n    });\n  }\n\n  scoreBoardNumberOflastReadyOrder: string;\n  readyOrders: OrderDto[];\n  inProgressOrders: OrderDto[];\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.orderService.findAll().subscribe(data => {\n      function sortOrderByModifiedDate(order1: OrderDto, order2: OrderDto): number {\n        if (order1.lastModifiedDate < order2.lastModifiedDate) {\n          // order1 is older\n          return 1;\n        } else if (order1.lastModifiedDate > order2.lastModifiedDate) {\n          // order2 is older\n          return -1;\n        }\n        // equal\n        return 0;\n      }\n\n      this.inProgressOrders = data.filter(order => order.state == 'IN_PROGRESS').sort(sortOrderByModifiedDate);\n      this.readyOrders = data.filter(order => order.state == 'READY').sort(sortOrderByModifiedDate);\n      this.scoreBoardNumberOflastReadyOrder = this.readyOrders.length > 0 ? this.readyOrders[0].scoreBoardNumber.toString() : '-';\n    });\n  }\n}\n","<div class=\"container bg-dark\">\n  <div class=\"row bg-dark\">\n    <div class=\"col-lg\">\n      <p class=\"display-1 text-white text-center\">\n        Bereit zur Abholung: {{scoreBoardNumberOflastReadyOrder}}\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row bg-dark\">\n    <div class=\"col-lg\">\n      <table class=\"table table-bordered table-striped text-center\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">In Bearbeitung</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr class=\"table-warning\" *ngFor=\"let inProgressOrder of inProgressOrders\">\n          <td>{{ inProgressOrder.scoreBoardNumber }}</td>\n        </tr>\n        </tbody>\n      </table>\n\n    </div>\n\n    <div class=\"col-lg\">\n      <table class=\"table table-bordered table-striped text-center\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Bereit zur Abholung</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr class=\"table-success\" *ngFor=\"let readyOrder of readyOrders\">\n          <td>{{ readyOrder.scoreBoardNumber }}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n</div>\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {OrderDto} from '../model/order-dto';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class OrderService {\n\n  private url: string;\n\n  constructor(private http: HttpClient) {\n    this.url = 'http://localhost:8080/companies/B28C343D-03C1-4FF1-90B9-5DDA8AFD3BFE';\n  }\n\n  public findAll(): Observable<OrderDto[]> {\n    return this.http.get<OrderDto[]>(this.url + \"/orders\");\n  }\n\n  public save(order: OrderDto): Observable<OrderDto> {\n    return this.http.post<OrderDto>(this.url + \"/orders\", order);\n  }\n\n  public update(order: OrderDto): Observable<OrderDto> {\n    return this.http.put<OrderDto>(this.url + \"/orders/\" + order.uuid, order);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}