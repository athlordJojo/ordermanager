{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/model/order-dto.ts","./src/app/order-form/order-form/order-form.component.ts","./src/app/order-form/order-form/order-form.component.html","./src/app/order-list/order-list/order-list.component.ts","./src/app/order-list/order-list/order-list.component.html","./src/app/service/order.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {OrderListComponent} from \"./order-list/order-list/order-list.component\";\nimport {OrderFormComponent} from \"./order-form/order-form/order-form.component\";\n\nconst routes: Routes = [\n  { path: 'orders', component: OrderListComponent },\n  { path: 'manage', component: OrderFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title: string;\n\n  constructor() {\n    this.title = 'Ordermanager';\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card bg-dark my-5\">\n        <div class=\"card-body\">\n          <h2 class=\"card-title text-center text-white py-3\">{{ title }}</h2>\n          <ul class=\"text-center list-inline py-3\">\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/orders\" class=\"btn btn-info\">List Orders</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/manage\" class=\"btn btn-info\">Manage Orders</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {OrderListComponent} from './order-list/order-list/order-list.component';\nimport {OrderFormComponent} from './order-form/order-form/order-form.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {OrderService} from \"./service/order.service\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AppRoutingModule} from \"./app-routing.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrderListComponent,\n    OrderFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [OrderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export class OrderDto {\n  uuid: string;\n  title: string;\n  scoreBoardNumber: number;\n  state: String;\n  createdDate: Date;\n  lastModifiedDate: Date;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {OrderService} from '../../service/order.service';\nimport {OrderDto} from \"../../model/order-dto\";\n\n@Component({\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css']\n})\nexport class OrderFormComponent implements OnInit {\n\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  newOrder: OrderDto;\n  selectedOrder: OrderDto;\n  orders: OrderDto[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private orderService: OrderService) {\n    this.newOrder = new OrderDto();\n    this.newOrder.state = 'IN_PROGRESS';\n  }\n\n  onSubmit() {\n    this.orderService.save(this.newOrder).subscribe(result => this.gotoUserList());\n    this.newOrder.scoreBoardNumber = null;\n    this.loadData();\n  }\n\n  gotoUserList() {\n    // this.router.navigate(['/orders']);\n  }\n\n  loadData() {\n    this.orderService.findAll().subscribe(data => {\n      this.orders = data\n      this.orders.sort((o1, o2) => {\n        return o1.state.localeCompare(o2.state.toString())\n      });\n    })\n  }\n\n  selectOrder(selectedOrder: OrderDto) {\n    this.selectedOrder = selectedOrder;\n    console.log(\"Clicked:\", selectedOrder);\n  }\n\n  changeStateOfSelectedOrder(state: string) {\n    this.selectedOrder.state = state;\n    this.orderService.update(this.selectedOrder).subscribe(data => this.loadData());\n  }\n\n}\n","<div class=\"container bg-dark\">\n\n  <div class=\"row bg-dark\">\n    <div class=\"col-lg\">\n      <p class=\"display-4 text-white text-center\">\n        Neue Bestellung aufgeben\n      </p>\n      <form (ngSubmit)=\"onSubmit()\" #orderForm=\"ngForm\">\n        <div class=\"form-group\">\n          <input type=\"number\" [(ngModel)]=\"newOrder.scoreBoardNumber\"\n                 class=\"form-control\"\n                 id=\"scoreBoardNumber\"\n                 name=\"scoreBoardNumber\"\n                 placeholder=\"Bestellnummer eingeben\"\n                 required #scoreBoardNumber=\"ngModel\">\n        </div>\n        <div [hidden]=\"!scoreBoardNumber.pristine\" class=\"alert alert-danger\">Bestellnummer wird benötigt</div>\n        <button type=\"submit\" [disabled]=\"!orderForm.form.valid\"\n                class=\"btn btn-info\">Erstellen\n        </button>\n      </form>\n    </div>\n  </div>\n  <!--  <div class=\"row bg-dark\">-->\n\n  <!--  </div>-->\n  <div class=\"row bg-dark\">\n    <div class=\"col-lg\">\n      <p class=\"display-4 text-white text-center\">\n        Bestellungen verwalten\n      </p>\n      <div class=\"text-center\">\n        <div class=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Basic example\">\n          <button [disabled]=\"!selectedOrder\" type=\"button\" class=\"btn btn-secondary\"\n                  (click)=\"changeStateOfSelectedOrder('IN_PROGRESS')\">In Bearbeitung\n          </button>\n          <button [disabled]=\"!selectedOrder\" type=\"button\" class=\"btn btn-secondary\"\n                  (click)=\"changeStateOfSelectedOrder('READY')\">Bereit\n          </button>\n          <button [disabled]=\"!selectedOrder\" type=\"button\" class=\"btn btn-secondary\"\n                  (click)=\"changeStateOfSelectedOrder('DONE')\">Fertig\n          </button>\n        </div>\n      </div>\n\n      <table class=\"table table-bordered table-striped text-center\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Bestellnummer</th>\n          <th scope=\"col\">Zustand</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr (click)=\"selectOrder(order)\"\n            [ngClass]=\"{'table-success': order.state === 'READY', 'table-warning':order.state === 'IN_PROGRESS', 'table-dark':order.state === 'DONE' }\"\n            class=\"table-success\" *ngFor=\"let order of orders\">\n          <td>{{ order.scoreBoardNumber }}</td>\n          <td>{{ order.state }}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {OrderService} from \"../../service/order.service\";\nimport {OrderDto} from \"../../model/order-dto\";\nimport {timer} from 'rxjs';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit, OnDestroy {\n  subscription;\n\n  ngOnDestroy(): void {\n    console.log(\"Cancel timer.\")\n    this.subscription.unsubscribe();\n  }\n\n  constructor(private orderService: OrderService) {\n    const t = timer(2000, 4000);\n    this.subscription = t.subscribe(v => {\n      this.loadData();\n    });\n  }\n\n  scoreBoardNumberOflastReadyOrder: string;\n  readyOrders: OrderDto[];\n  inProgressOrders: OrderDto[];\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.orderService.findAll().subscribe(data => {\n      function sortOrderByModifiedDate(order1: OrderDto, order2: OrderDto): number {\n        if (order1.lastModifiedDate < order2.lastModifiedDate) {\n          // order1 is older\n          return 1;\n        } else if (order1.lastModifiedDate > order2.lastModifiedDate) {\n          // order2 is older\n          return -1;\n        }\n        // equal\n        return 0;\n      }\n\n      this.inProgressOrders = data.filter(order => order.state == 'IN_PROGRESS').sort(sortOrderByModifiedDate);\n      this.readyOrders = data.filter(order => order.state == 'READY').sort(sortOrderByModifiedDate);\n      this.scoreBoardNumberOflastReadyOrder = this.readyOrders.length > 0 ? this.readyOrders[0].scoreBoardNumber.toString() : '-';\n    });\n  }\n}\n","<div class=\"container bg-dark\">\n  <div class=\"row bg-dark\">\n    <div class=\"col-lg\">\n      <p class=\"display-1 text-white text-center\">\n        Bereit zur Abholung: {{scoreBoardNumberOflastReadyOrder}}\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row bg-dark\">\n    <div class=\"col-lg\">\n      <table class=\"table table-bordered table-striped text-center\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">In Bearbeitung</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr class=\"table-warning\" *ngFor=\"let inProgressOrder of inProgressOrders\">\n          <td>{{ inProgressOrder.scoreBoardNumber }}</td>\n        </tr>\n        </tbody>\n      </table>\n\n    </div>\n\n    <div class=\"col-lg\">\n      <table class=\"table table-bordered table-striped text-center\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Bereit zur Abholung</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr class=\"table-success\" *ngFor=\"let readyOrder of readyOrders\">\n          <td>{{ readyOrder.scoreBoardNumber }}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n</div>\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {OrderDto} from '../model/order-dto';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class OrderService {\n\n  private url: string;\n\n  constructor(private http: HttpClient) {\n    this.url = 'http://localhost:8080/companies/B28C343D-03C1-4FF1-90B9-5DDA8AFD3BFE';\n  }\n\n  public findAll(): Observable<OrderDto[]> {\n    return this.http.get<OrderDto[]>(this.url + \"/orders\");\n  }\n\n  public save(order: OrderDto): Observable<OrderDto> {\n    return this.http.post<OrderDto>(this.url + \"/orders\", order);\n  }\n\n  public update(order: OrderDto): Observable<OrderDto> {\n    return this.http.put<OrderDto>(this.url + \"/orders/\" + order.uuid, order);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}